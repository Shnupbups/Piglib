plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	id "me.modmuss50.mod-publish-plugin" version "${mod_publish_plugin_version}"
}

version = project.mod_version + "+" + project.version_meta + "-mc" + project.wider_minecraft_version
group = project.maven_group

base {
	archivesName = project.mod_name
}

repositories {
	maven { url "https://maven.terraformersmc.com/"}
	maven { url "https://maven.shedaniel.me/" }
}

dependencies {
	// Minecraft
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

    // Yarn
    mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}:v${project.tiny_version}"

    // Fabric Loader
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fapi_version}"
	
	// ModMenu
    modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
	
	// RoughlyEnoughItems
	modApi "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
	
	// Architectury Fabric
	modRuntimeOnly "dev.architectury:architectury-fabric:${project.arch_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
	
	manifest {
        attributes([
                "Specification-Title"     : "${mod_name}",
                "Specification-Vendor"    : "${maven_group}",
                "Specification-Version"   : "${mod_version}",
                "Implementation-Title"    : "${mod_name}",
                "Implementation-Version"  : "${mod_version}",
                "Implementation-Vendor"   : "${maven_group}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "${mod_name}.mixins.json"
        ])
    }
}

publishMods {
	changelog = ""
    type = STABLE
	
    file = remapJar.archiveFile
    modLoaders.add("fabric")
	
	curseforge {
        projectId = "${project.cf_project}"
        accessToken = providers.environmentVariable("CF_TOKEN")
        minecraftVersions.add("${project.minecraft_version}")
    }
	
	modrinth {
        projectId = "${project.modrinth_project}"
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        minecraftVersions.add("${project.minecraft_version}")
    }
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		mavenLocal()
		
		if (System.getenv("MAVEN_PASS") != null) {
            maven {
                url = "https://deploy.shedaniel.me/"
                credentials {
                    username = "shedaniel"
                    password = System.getenv("MAVEN_PASS")
                }
            }
        }
	}
}
